{"ast":null,"code":"import axios from \"axios\";\nimport authActions from \"./authActions\";\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  }\n\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n    console.log(\"response\", response);\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst login = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n    token.set(response.datate.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nexport default {\n  register\n};","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-08-phonebook/src/redux/auth/authOperations.js"],"names":["axios","authActions","defaults","baseURL","token","set","headers","common","Authorization","unset","register","credentials","dispatch","registerRequest","response","post","console","log","data","registerSuccess","error","registerError","message","login","loginRequest","datate","loginSuccess","loginError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,0CAAzB;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,GAAG,CAACD,KAAD,EAAQ;AACTJ,IAAAA,KAAK,CAACE,QAAN,CAAeI,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA+C,UAASJ,KAAM,EAA9D;AACD,GAHW;;AAIZK,EAAAA,KAAK,GAAG;AACNT,IAAAA,KAAK,CAACE,QAAN,CAAeI,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA8C,EAA9C;AACD;;AANW,CAAd;;AASA,MAAME,QAAQ,GAAIC,WAAD,IAAiB,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAACX,WAAW,CAACY,eAAZ,EAAD,CAAR;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,eAAX,EAA4BJ,WAA5B,CAAvB;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAV,IAAAA,KAAK,CAACC,GAAN,CAAUS,QAAQ,CAACI,IAAT,CAAcd,KAAxB;AACAQ,IAAAA,QAAQ,CAACX,WAAW,CAACkB,eAAZ,CAA4BL,QAAQ,CAACI,IAArC,CAAD,CAAR;AACD,GAND,CAME,OAAOE,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAACX,WAAW,CAACoB,aAAZ,CAA0BD,KAAK,CAACE,OAAhC,CAAD,CAAR;AACD;AACF,CAXD;;AAaA,MAAMC,KAAK,GAAIZ,WAAD,IAAiB,MAAOC,QAAP,IAAoB;AACjDA,EAAAA,QAAQ,CAACX,WAAW,CAACuB,YAAZ,EAAD,CAAR;;AAEA,MAAI;AACF,UAAMV,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,cAAX,EAA2BJ,WAA3B,CAAvB;AAEAP,IAAAA,KAAK,CAACC,GAAN,CAAUS,QAAQ,CAACW,MAAT,CAAgBrB,KAA1B;AACAQ,IAAAA,QAAQ,CAACX,WAAW,CAACyB,YAAZ,CAAyBZ,QAAQ,CAACI,IAAlC,CAAD,CAAR;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAACX,WAAW,CAAC0B,UAAZ,CAAuBP,KAAK,CAACE,OAA7B,CAAD,CAAR;AACD;AACF,CAXD;;AAYA,eAAe;AAAEZ,EAAAA;AAAF,CAAf","sourcesContent":["import axios from \"axios\";\nimport authActions from \"./authActions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    console.log(\"response\", response);\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst login = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.datate.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\nexport default { register };\n"]},"metadata":{},"sourceType":"module"}