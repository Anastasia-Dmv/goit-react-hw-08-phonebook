{"ast":null,"code":"//import { createStore, combineReducers } from \"redux\";\n//import { itemsReducer, filterReducer } from \"./contact/contact-reducer\";\nimport contactsReducer from \"./contact/contact-reducer\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport authReducers from \"./auth/authReducers\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nconst middleware = [...getDefaultMiddleware({// serializableCheck: {\n  //   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  // },\n}) // logger,\n];\nconst persistToken = {\n  key: \"token\",\n  storage,\n  whitelist: [\"token\"]\n};\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(persistToken, authReducers)\n  }\n});\nexport const persistor = persistStore(store); //=======old version, without toolkit=====\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n//   //   items: itemsReducer,\n//   //   filter: filterReducer,\n// });\n// const store = createStore(\n//   rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n//=======old version=====","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-08-phonebook/src/redux/store.js"],"names":["contactsReducer","configureStore","getDefaultMiddleware","authReducers","storage","persistStore","persistReducer","middleware","persistToken","key","whitelist","store","reducer","contacts","auth","persistor"],"mappings":"AAAA;AACA;AACA,OAAOA,eAAP,MAA4B,2BAA5B;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AAEA,MAAMC,UAAU,GAAG,CACjB,GAAGL,oBAAoB,CAAC,CACtB;AACA;AACA;AAHsB,CAAD,CADN,CAMjB;AANiB,CAAnB;AAQA,MAAMM,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE,OADc;AAEnBL,EAAAA,OAFmB;AAGnBM,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHQ,CAArB;AAKA,OAAO,MAAMC,KAAK,GAAGV,cAAc,CAAC;AAClCW,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEb,eADH;AAEPc,IAAAA,IAAI,EAAER,cAAc,CAACE,YAAD,EAAeL,YAAf;AAFb;AADyB,CAAD,CAA5B;AAOP,OAAO,MAAMY,SAAS,GAAGV,YAAY,CAACM,KAAD,CAA9B,C,CAEP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["//import { createStore, combineReducers } from \"redux\";\n//import { itemsReducer, filterReducer } from \"./contact/contact-reducer\";\nimport contactsReducer from \"./contact/contact-reducer\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport authReducers from \"./auth/authReducers\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    // serializableCheck: {\n    //   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    // },\n  }),\n  // logger,\n];\nconst persistToken = {\n  key: \"token\",\n  storage,\n  whitelist: [\"token\"],\n};\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(persistToken, authReducers),\n  },\n});\n\nexport const persistor = persistStore(store);\n\n//=======old version, without toolkit=====\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n//   //   items: itemsReducer,\n//   //   filter: filterReducer,\n// });\n\n// const store = createStore(\n//   rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n//=======old version=====\n"]},"metadata":{},"sourceType":"module"}