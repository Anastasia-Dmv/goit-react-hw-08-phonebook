{"ast":null,"code":"//import { createStore, combineReducers } from \"redux\";\n//import { itemsReducer, filterReducer } from \"./contact/contact-reducer\";\nimport contactsReducer from \"./contact/contact-reducer\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport authReducers from \"./auth/authReducers\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\"; // const middleware = [\n//   ...getDefaultMiddleware({\n//     // serializableCheck: {\n//     //   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     // },\n//   }),\n//   // logger,\n// ];\n\nconst persistToken = {\n  key: \"token\",\n  storage,\n  whitelist: [\"token\"]\n};\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(persistToken, authReducers)\n  },\n  // middleware,\n  devTools: process.env.NODE_ENV === \"development\"\n});\nexport const persistor = persistStore(store); //=======old version, without toolkit=====\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n//   //   items: itemsReducer,\n//   //   filter: filterReducer,\n// });\n// const store = createStore(\n//   rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n//=======old version=====","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-08-phonebook/src/redux/store.js"],"names":["contactsReducer","configureStore","getDefaultMiddleware","authReducers","storage","persistStore","persistReducer","persistToken","key","whitelist","store","reducer","contacts","auth","devTools","process","env","NODE_ENV","persistor"],"mappings":"AAAA;AACA;AACA,OAAOA,eAAP,MAA4B,2BAA5B;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE,OADc;AAEnBJ,EAAAA,OAFmB;AAGnBK,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHQ,CAArB;AAKA,OAAO,MAAMC,KAAK,GAAGT,cAAc,CAAC;AAClCU,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEZ,eADH;AAEPa,IAAAA,IAAI,EAAEP,cAAc,CAACC,YAAD,EAAeJ,YAAf;AAFb,GADyB;AAKlC;AACAW,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAND,CAAD,CAA5B;AASP,OAAO,MAAMC,SAAS,GAAGb,YAAY,CAACK,KAAD,CAA9B,C,CAEP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["//import { createStore, combineReducers } from \"redux\";\n//import { itemsReducer, filterReducer } from \"./contact/contact-reducer\";\nimport contactsReducer from \"./contact/contact-reducer\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport authReducers from \"./auth/authReducers\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     // serializableCheck: {\n//     //   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     // },\n//   }),\n//   // logger,\n// ];\nconst persistToken = {\n  key: \"token\",\n  storage,\n  whitelist: [\"token\"],\n};\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(persistToken, authReducers),\n  },\n  // middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n\n//=======old version, without toolkit=====\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n//   //   items: itemsReducer,\n//   //   filter: filterReducer,\n// });\n\n// const store = createStore(\n//   rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n//=======old version=====\n"]},"metadata":{},"sourceType":"module"}