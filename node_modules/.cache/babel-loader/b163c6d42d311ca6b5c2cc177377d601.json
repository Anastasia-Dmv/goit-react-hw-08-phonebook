{"ast":null,"code":"import contactsActions from \"./contact-actions\";\nimport axios from \"axios\";\n\nconst register = (name, number) => dispatch => {\n  dispatch(contactsActions.addContactRequest()); //fetch(\"http://localhost:2000/contacts\");\n  // console.log(\"contact\", contact);\n\n  baseUrl = \"https://goit-phonebook-api.herokuapp.com/ \";\n  axios.post(`${baseUrl}POST\n    ​/users​/signup\n    \", { name, number }`).then(response => {\n    console.log(\"resrtduytfuy\", response.data);\n    dispatch(contactsActions.addContactSuccess({\n      name,\n      number,\n      id: response.data.name\n    }));\n  }).catch(error => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => dispatch => {\n  dispatch(contactsActions.fetchContactsRequest());\n  axios.get(\"https://react7-b91fe.firebaseio.com/contacts.json\").then(({\n    data\n  }) => {\n    console.log(\"data\", data);\n    const keys = Object.keys(data);\n    const newData = keys.reduce((acc, key) => {\n      acc.push({\n        id: key,\n        ...data[key]\n      });\n      return acc;\n    }, []);\n    console.log(\"newData\", newData);\n    dispatch(contactsActions.fetchContactsSuccess(newData));\n  }) // })\n  .catch(error => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst removeContact = id => dispatch => {\n  dispatch(contactsActions.removeContactRequest());\n  axios.delete(`https://react7-b91fe.firebaseio.com/contacts/${id}.json`).then(() => dispatch(contactsActions.removeContactSuccess(id))).catch(error => dispatch(contactsActions.removeContactError(error)));\n};\n\nexport default {\n  register,\n  fetchContacts,\n  removeContact\n};","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-08-phonebook/src/redux/contact/contactsOperation.js"],"names":["contactsActions","axios","register","name","number","dispatch","addContactRequest","baseUrl","post","then","response","console","log","data","addContactSuccess","id","catch","error","addContactError","fetchContacts","fetchContactsRequest","get","keys","Object","newData","reduce","acc","key","push","fetchContactsSuccess","fetchContactsError","removeContact","removeContactRequest","delete","removeContactSuccess","removeContactError"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAmBC,QAAD,IAAc;AAC/CA,EAAAA,QAAQ,CAACL,eAAe,CAACM,iBAAhB,EAAD,CAAR,CAD+C,CAE/C;AACA;;AACAC,EAAAA,OAAO,GAAG,4CAAV;AACAN,EAAAA,KAAK,CACFO,IADH,CAEK,GAAED,OAAQ;;wBAFf,EAMGE,IANH,CAMSC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,QAAQ,CAACG,IAArC;AACAR,IAAAA,QAAQ,CACNL,eAAe,CAACc,iBAAhB,CAAkC;AAChCX,MAAAA,IADgC;AAEhCC,MAAAA,MAFgC;AAGhCW,MAAAA,EAAE,EAAEL,QAAQ,CAACG,IAAT,CAAcV;AAHc,KAAlC,CADM,CAAR;AAOD,GAfH,EAgBGa,KAhBH,CAgBUC,KAAD,IAAWZ,QAAQ,CAACL,eAAe,CAACkB,eAAhB,CAAgCD,KAAhC,CAAD,CAhB5B;AAiBD,CAtBD;;AAwBA,MAAME,aAAa,GAAG,MAAOd,QAAD,IAAc;AACxCA,EAAAA,QAAQ,CAACL,eAAe,CAACoB,oBAAhB,EAAD,CAAR;AACAnB,EAAAA,KAAK,CACFoB,GADH,CACO,mDADP,EAEGZ,IAFH,CAEQ,CAAC;AAAEI,IAAAA;AAAF,GAAD,KAAc;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,IAApB;AAEA,UAAMS,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYT,IAAZ,CAAb;AACA,UAAMW,OAAO,GAAGF,IAAI,CAACG,MAAL,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxCD,MAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEb,QAAAA,EAAE,EAAEY,GAAN;AAAW,WAAGd,IAAI,CAACc,GAAD;AAAlB,OAAT;AACA,aAAOD,GAAP;AACD,KAHe,EAGb,EAHa,CAAhB;AAIAf,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBY,OAAvB;AACAnB,IAAAA,QAAQ,CAACL,eAAe,CAAC6B,oBAAhB,CAAqCL,OAArC,CAAD,CAAR;AACD,GAZH,EAaE;AAbF,GAcGR,KAdH,CAcUC,KAAD,IAAWZ,QAAQ,CAACL,eAAe,CAAC8B,kBAAhB,CAAmCb,KAAnC,CAAD,CAd5B;AAeD,CAjBD;;AAmBA,MAAMc,aAAa,GAAIhB,EAAD,IAASV,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAACL,eAAe,CAACgC,oBAAhB,EAAD,CAAR;AACA/B,EAAAA,KAAK,CACFgC,MADH,CACW,gDAA+ClB,EAAG,OAD7D,EAEGN,IAFH,CAEQ,MAAMJ,QAAQ,CAACL,eAAe,CAACkC,oBAAhB,CAAqCnB,EAArC,CAAD,CAFtB,EAGGC,KAHH,CAGUC,KAAD,IAAWZ,QAAQ,CAACL,eAAe,CAACmC,kBAAhB,CAAmClB,KAAnC,CAAD,CAH5B;AAID,CAND;;AAOA,eAAe;AACbf,EAAAA,QADa;AAEbiB,EAAAA,aAFa;AAGbY,EAAAA;AAHa,CAAf","sourcesContent":["import contactsActions from \"./contact-actions\";\nimport axios from \"axios\";\n\nconst register = (name, number) => (dispatch) => {\n  dispatch(contactsActions.addContactRequest());\n  //fetch(\"http://localhost:2000/contacts\");\n  // console.log(\"contact\", contact);\n  baseUrl = \"https://goit-phonebook-api.herokuapp.com/ \";\n  axios\n    .post(\n      `${baseUrl}POST\n    ​/users​/signup\n    \", { name, number }`\n    )\n    .then((response) => {\n      console.log(\"resrtduytfuy\", response.data);\n      dispatch(\n        contactsActions.addContactSuccess({\n          name,\n          number,\n          id: response.data.name,\n        })\n      );\n    })\n    .catch((error) => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(contactsActions.fetchContactsRequest());\n  axios\n    .get(\"https://react7-b91fe.firebaseio.com/contacts.json\")\n    .then(({ data }) => {\n      console.log(\"data\", data);\n\n      const keys = Object.keys(data);\n      const newData = keys.reduce((acc, key) => {\n        acc.push({ id: key, ...data[key] });\n        return acc;\n      }, []);\n      console.log(\"newData\", newData);\n      dispatch(contactsActions.fetchContactsSuccess(newData));\n    })\n    // })\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst removeContact = (id) => (dispatch) => {\n  dispatch(contactsActions.removeContactRequest());\n  axios\n    .delete(`https://react7-b91fe.firebaseio.com/contacts/${id}.json`)\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\n    .catch((error) => dispatch(contactsActions.removeContactError(error)));\n};\nexport default {\n  register,\n  fetchContacts,\n  removeContact,\n};\n"]},"metadata":{},"sourceType":"module"}