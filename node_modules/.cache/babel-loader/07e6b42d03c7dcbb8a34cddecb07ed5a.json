{"ast":null,"code":"import contactsActions from \"./contact-actions\";\nimport axios from \"axios\";\nimport { token } from \"../auth/authOperations\";\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst addContact = (name, number) => dispatch => {\n  dispatch(contactsActions.addContactRequest()); //fetch(\"http://localhost:2000/contacts\");\n  // console.log(\"contact\", contact);\n\n  axios.post(\"/contacts\", {\n    name,\n    number\n  }).then(response => {\n    console.log(\"resrtduytfuy\", response.data);\n    dispatch(contactsActions.addContactSuccess({\n      name,\n      number,\n      id: response.data.name\n    }));\n  }).catch(error => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => (dispatch, getState) => {\n  dispatch(contactsActions.fetchContactsRequest());\n  const {\n    auth: {\n      token: persistedToken\n    }\n  } = getState();\n  token.set(persistedToken);\n  axios.get(\"/contacts\").then(({\n    data\n  }) => {\n    console.log(\"data\", data);\n    const keys = Object.keys(data);\n    const newData = keys.reduce((acc, key) => {\n      acc.push({\n        id: key,\n        ...data[key]\n      });\n      return acc;\n    }, []);\n    console.log(\"newData\", newData);\n    dispatch(contactsActions.fetchContactsSuccess(newData));\n  }) // })\n  .catch(error => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst removeContact = id => dispatch => {\n  dispatch(contactsActions.removeContactRequest());\n  axios.delete(`contacts/${id}`).then(() => dispatch(contactsActions.removeContactSuccess(id))).catch(error => dispatch(contactsActions.removeContactError(error)));\n};\n\nexport default {\n  addContact,\n  fetchContacts,\n  removeContact\n};","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-08-phonebook/src/redux/contact/contactsOperation.js"],"names":["contactsActions","axios","token","defaults","baseURL","addContact","name","number","dispatch","addContactRequest","post","then","response","console","log","data","addContactSuccess","id","catch","error","addContactError","fetchContacts","getState","fetchContactsRequest","auth","persistedToken","set","get","keys","Object","newData","reduce","acc","key","push","fetchContactsSuccess","fetchContactsError","removeContact","removeContactRequest","delete","removeContactSuccess","removeContactError"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,0CAAzB;;AACA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAmBC,QAAD,IAAc;AACjDA,EAAAA,QAAQ,CAACR,eAAe,CAACS,iBAAhB,EAAD,CAAR,CADiD,CAEjD;AACA;;AAEAR,EAAAA,KAAK,CACFS,IADH,CACQ,WADR,EACqB;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GADrB,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,QAAQ,CAACG,IAArC;AACAP,IAAAA,QAAQ,CACNR,eAAe,CAACgB,iBAAhB,CAAkC;AAChCV,MAAAA,IADgC;AAEhCC,MAAAA,MAFgC;AAGhCU,MAAAA,EAAE,EAAEL,QAAQ,CAACG,IAAT,CAAcT;AAHc,KAAlC,CADM,CAAR;AAOD,GAXH,EAYGY,KAZH,CAYUC,KAAD,IAAWX,QAAQ,CAACR,eAAe,CAACoB,eAAhB,CAAgCD,KAAhC,CAAD,CAZ5B;AAaD,CAlBD;;AAoBA,MAAME,aAAa,GAAG,MAAM,CAACb,QAAD,EAAWc,QAAX,KAAwB;AAClDd,EAAAA,QAAQ,CAACR,eAAe,CAACuB,oBAAhB,EAAD,CAAR;AACA,QAAM;AACJC,IAAAA,IAAI,EAAE;AAAEtB,MAAAA,KAAK,EAAEuB;AAAT;AADF,MAEFH,QAAQ,EAFZ;AAGApB,EAAAA,KAAK,CAACwB,GAAN,CAAUD,cAAV;AACAxB,EAAAA,KAAK,CACF0B,GADH,CACO,WADP,EAEGhB,IAFH,CAEQ,CAAC;AAAEI,IAAAA;AAAF,GAAD,KAAc;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,IAApB;AAEA,UAAMa,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYb,IAAZ,CAAb;AACA,UAAMe,OAAO,GAAGF,IAAI,CAACG,MAAL,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxCD,MAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEjB,QAAAA,EAAE,EAAEgB,GAAN;AAAW,WAAGlB,IAAI,CAACkB,GAAD;AAAlB,OAAT;AACA,aAAOD,GAAP;AACD,KAHe,EAGb,EAHa,CAAhB;AAIAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBgB,OAAvB;AACAtB,IAAAA,QAAQ,CAACR,eAAe,CAACmC,oBAAhB,CAAqCL,OAArC,CAAD,CAAR;AACD,GAZH,EAaE;AAbF,GAcGZ,KAdH,CAcUC,KAAD,IAAWX,QAAQ,CAACR,eAAe,CAACoC,kBAAhB,CAAmCjB,KAAnC,CAAD,CAd5B;AAeD,CArBD;;AAuBA,MAAMkB,aAAa,GAAIpB,EAAD,IAAST,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAACR,eAAe,CAACsC,oBAAhB,EAAD,CAAR;AACArC,EAAAA,KAAK,CACFsC,MADH,CACW,YAAWtB,EAAG,EADzB,EAEGN,IAFH,CAEQ,MAAMH,QAAQ,CAACR,eAAe,CAACwC,oBAAhB,CAAqCvB,EAArC,CAAD,CAFtB,EAGGC,KAHH,CAGUC,KAAD,IAAWX,QAAQ,CAACR,eAAe,CAACyC,kBAAhB,CAAmCtB,KAAnC,CAAD,CAH5B;AAID,CAND;;AAOA,eAAe;AACbd,EAAAA,UADa;AAEbgB,EAAAA,aAFa;AAGbgB,EAAAA;AAHa,CAAf","sourcesContent":["import contactsActions from \"./contact-actions\";\nimport axios from \"axios\";\nimport { token } from \"../auth/authOperations\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\nconst addContact = (name, number) => (dispatch) => {\n  dispatch(contactsActions.addContactRequest());\n  //fetch(\"http://localhost:2000/contacts\");\n  // console.log(\"contact\", contact);\n\n  axios\n    .post(\"/contacts\", { name, number })\n    .then((response) => {\n      console.log(\"resrtduytfuy\", response.data);\n      dispatch(\n        contactsActions.addContactSuccess({\n          name,\n          number,\n          id: response.data.name,\n        })\n      );\n    })\n    .catch((error) => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => (dispatch, getState) => {\n  dispatch(contactsActions.fetchContactsRequest());\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  token.set(persistedToken);\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => {\n      console.log(\"data\", data);\n\n      const keys = Object.keys(data);\n      const newData = keys.reduce((acc, key) => {\n        acc.push({ id: key, ...data[key] });\n        return acc;\n      }, []);\n      console.log(\"newData\", newData);\n      dispatch(contactsActions.fetchContactsSuccess(newData));\n    })\n    // })\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst removeContact = (id) => (dispatch) => {\n  dispatch(contactsActions.removeContactRequest());\n  axios\n    .delete(`contacts/${id}`)\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\n    .catch((error) => dispatch(contactsActions.removeContactError(error)));\n};\nexport default {\n  addContact,\n  fetchContacts,\n  removeContact,\n};\n"]},"metadata":{},"sourceType":"module"}