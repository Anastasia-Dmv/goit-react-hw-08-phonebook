{"ast":null,"code":"//import {combineReducers} from  'redux';\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport authActions from \"./authActions\";\nconst initialUserState = {\n  name: null,\n  email: null\n};\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, {\n    payload\n  }) => payload.user,\n  [authActions.loginSuccess]: (_, {\n    payload\n  }) => payload.user,\n  [authActions.getCurrentUserSuccess]: (_, {\n    payload\n  }) => payload,\n  [authActions.logoutSuccess]: () => initialUserState\n});\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, {\n    payload\n  }) => payload.token,\n  [authActions.loginSuccess]: (_, {\n    payload\n  }) => payload.token,\n  [authActions.logoutSuccess]: () => null\n});\n\nsetError = (_, {\n  payload\n}) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, {\n    payload\n  }) => payload,\n  [authActions.loginError]: (_, {\n    payload\n  }) => payload,\n  [authActions.getCurrentUserError]: (_, {\n    payload\n  }) => payload,\n  [authActions.logoutError]: (_, {\n    payload\n  }) => payload\n});\nexport default combineReducers({\n  user,\n  token,\n  error\n});","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-08-phonebook/src/redux/auth/authReducers.js"],"names":["createReducer","combineReducers","authActions","initialUserState","name","email","user","registerSuccess","_","payload","loginSuccess","getCurrentUserSuccess","logoutSuccess","token","setError","error","registerError","loginError","getCurrentUserError","logoutError"],"mappings":"AAAA;AACA,SAASA,aAAT,EAAwBC,eAAxB,QAA+C,kBAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,gBAAgB,GAAG;AAAEC,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAAzB;AAEA,MAAMC,IAAI,GAAGN,aAAa,CAACG,gBAAD,EAAmB;AAC3C,GAACD,WAAW,CAACK,eAAb,GAA+B,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAAO,CAACH,IADhB;AAE3C,GAACJ,WAAW,CAACQ,YAAb,GAA4B,CAACF,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAAO,CAACH,IAFb;AAG3C,GAACJ,WAAW,CAACS,qBAAb,GAAqC,CAACH,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAHd;AAI3C,GAACP,WAAW,CAACU,aAAb,GAA6B,MAAMT;AAJQ,CAAnB,CAA1B;AAOA,MAAMU,KAAK,GAAGb,aAAa,CAAC,IAAD,EAAO;AAChC,GAACE,WAAW,CAACK,eAAb,GAA+B,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAAO,CAACI,KAD3B;AAEhC,GAACX,WAAW,CAACQ,YAAb,GAA4B,CAACF,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAAO,CAACI,KAFxB;AAGhC,GAACX,WAAW,CAACU,aAAb,GAA6B,MAAM;AAHH,CAAP,CAA3B;;AAMAE,QAAQ,GAAG,CAACN,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoBA,OAA/B;;AAEA,MAAMM,KAAK,GAAGf,aAAa,CAAC,IAAD,EAAO;AAChC,GAACE,WAAW,CAACc,aAAb,GAA6B,CAACR,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OADjB;AAEhC,GAACP,WAAW,CAACe,UAAb,GAA0B,CAACT,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAFd;AAGhC,GAACP,WAAW,CAACgB,mBAAb,GAAmC,CAACV,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAHvB;AAIhC,GAACP,WAAW,CAACiB,WAAb,GAA2B,CAACX,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA;AAJf,CAAP,CAA3B;AAOA,eAAeR,eAAe,CAAC;AAAEK,EAAAA,IAAF;AAAQO,EAAAA,KAAR;AAAeE,EAAAA;AAAf,CAAD,CAA9B","sourcesContent":["//import {combineReducers} from  'redux';\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport authActions from \"./authActions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n  [authActions.logoutSuccess]: () => initialUserState,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nsetError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ user, token, error });\n"]},"metadata":{},"sourceType":"module"}